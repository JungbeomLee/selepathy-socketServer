<!DOCTYPE html>
<html lang="en">

<head>
	<meta charset="UTF-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>전음</title>
	<link rel="stylesheet" href="https://unicons.iconscout.com/release/v4.0.0/css/line.css">
	<link rel="stylesheet" href="https://unicons.iconscout.com/release/v2.1.6/css/unicons.css">
	<script src="https://cdn.socket.io/socket.io-3.0.1.min.js"></script>
	<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
	<style>
	@import url(https://fonts.googleapis.com/css?family=Lato);
	* {
		box-sizing: border-box;
	}
	
	html {
		height: 100%;
	}
	.you{
        
        text-align: left;
    }
	body {
		align-items: center;
		height: 100%;
		overflow: visible;
		background-image: url('https://smproject-background-img.s3.ap-northeast-2.amazonaws.com/background-image.png');
		background-repeat: no-repeat;
		background-size: cover;
	}
	
	li {
		text-align: right;
		list-style: none;
		font-size: large;

	}
	
	body::-webkit-scrollbar {
		display: none;
		/* Chrome, Safari, Opera*/
	}
	#container {
		background: #333;
		color: #e8e8e8;
		width: 50%;
		min-height: 80vh;
		min-width: 20rem;
		margin: 1em auto;
		border-radius: 8px;
		padding: 1.5rem;
		font-family: 'Lato', sans-serif;
	}
	
	#chatBox {
		height: 85vh;
		min-width: 20rem;
		overflow: auto;
		overflow-x: hidden;
		word-break:break-word;

	}
	
	#chatBox::-webkit-scrollbar {
		display: none;
		/* Chrome, Safari, Opera*/
	}
	
	#container::-webkit-scrollbar {
		display: none;
		/* Chrome, Safari, Opera*/
	}
	/* #container .message {
	 display: flex;
	 flex-direction: horizontal;
	 margin: 1.5rem 0;
	 position: relative;
}
 #container .message .picture {
	 background: #666;
	 width: 4rem;
	 height: 4rem;
	 border-radius: 50%;
	 margin-right: 2rem;
	 line-height: 4rem;
	 vertical-align: bottom;
	 font-size: 2rem;
	 font-weight: bold;
	 text-align: center;
}
 #container .mine {
	 flex-direction: row-reverse;
}
 #container .mine .picture {
	 margin-left: 2rem;
	 margin-right: 0;
} */
	/* #contents {
	 margin-right: 0;
	 margin-left: calc(4rem - 1rem - 0.5rem);
	 background: #17191c;
   border-radius: 4px;
}
 #contents::before {
	 position: absolute;
	 background: #17191c;
	 left: auto;
	 right: calc(4rem + 2rem - 0.75rem/2);
} */
	
	.logout {
		float: right;
		margin-top: 0.5vh;
		margin-right: 5vh;
	}
	
	.myChat {
		position: absolute;
		min-width: 86%;
		min-height: 70%;
		margin-left: 0%;
		height: 7%;
		bottom: 0;
		border: 0 solid black;
		word-break: break-all;
		z-index: 2;
		margin-bottom: 1.4%;
		margin-left: 1.4%;
        font-size: 1.5rem;
	}
	
	.circle {
		position: absolute;
		margin: 0;
		text-align: center;
		margin: 0 auto;
		background-color: black;
		min-width: 4.2rem;
		min-height: 4.2rem;
		line-height: 4.2rem;
		color: white;
		font-size: 2.8rem;
		border-radius: 50%;
		margin-left: 90%;
		margin-bottom: 1.5%;
		bottom: 0px;
		z-index: 2;
	}
	
	.myChat-back {
		position: absolute;
		background-color: gray;
		bottom: 30px;
		margin-bottom: -0.85%;
		margin-left: -1.23%;
		min-width: 49.55%;
		min-height: 10%;
		border-radius: 0 0 8px 8px

	}
	</style>
</head>

<body >
	<form class="logout" action="/logout" method="POST">
		<button type="submit">Logout</button>
	</form>
	<div id="container">
		<div id="backcolor">
			<div id="chatBox">
				<ul id="userNum" type="none">
					<li id="usercount"></li>
				</ul>
				<ul id="messages" type="none">
					<!-- 채팅 내용 나타남 -->
				</ul>
				<div id="contents "></div>
				<div class="myChat-back">
					<form id="msgform">
						<input id="msginput" autocomplete="off" type="text" class="myChat" required>
						<button type="submit" class="circle"><i class="uil uil-message"> </i></button>
            </form>
              
            </div>
          </div>
        </div>
         <script src="/socket.io/socket.io.js"></script>
            <script>
                 var first_Name = ["신비한","이상한","요상한","일그러진","매혹적인","명섭적인","오징어같은","냄새나는","유명한","신형만"];
                var Last_Name = ["강아지","고양이","코뿔소","하마","오징어","여우","늑대","스컹크","하마","원숭이"];
                var autoScroll = document.getElementById("container");
				var autoScrol = document.getElementById("chatBox");
                
				licount=0;
                var socket = io();
                var msgform = document.getElementById('msgform');
                // socket.on 함수로 서버에서 전달하는 신호를 수신
                
                socket.on('usercount', (count) => {
                    
                    var userCounter = document.getElementById('usercount');
                    userCounter.innerText = "현재 " + count + "명이 서버에 접속해있습니다.";
                    
                }); 
                

                // 메시지 수신시 HTML에 메시지 내용 작성
                socket.on('message', (msg) => {
                    var random_Number1 = Math.floor(Math.random()*10)
                    var random_Number2 = Math.floor(Math.random()*10)
                    var messageList = document.getElementById('messages');
                    var messageName = document.createElement("li");
                    var messageTag = document.createElement("li");
                    messageName.className='you'
                    messageTag.className='you'
                    messageName.innerText = `${first_Name[random_Number1]} ${Last_Name[random_Number2]}`
                    messageList.appendChild(messageName);
                    messageTag.innerText = msg;
                    messageList.appendChild(messageTag);
                    licount++;
					autoScrol.scrollTop = autoScroll.scrollHeight;

					//채팅 제거
					var ul= document.getElementById("messages");		

					var item = ul.getElementsByTagName('li');
					if(licount == 75){
						item[0].remove();
						licount = 74;
					};

                });
				
                msgform.onsubmit = (e) => {
                    
					
					e.preventDefault();
                    var random_Number1 = Math.floor(Math.random()*10)
                    var random_Number2 = Math.floor(Math.random()*10)
                    var msginput = document.getElementById('msginput');
                    var messageList = document.getElementById('messages');
                    var messageName = document.createElement("li");
                    var messageTag = document.createElement("li");
                    
                    messageName.innerText = `${first_Name[random_Number1]} ${Last_Name[random_Number2]}`
                    messageList.appendChild(messageName);
                    messageTag.innerText = msginput.value;
                    messageList.appendChild(messageTag);
                    
                    // socket.emit으로 서버에 신호를 전달
                    socket.emit('message', msginput.value);
                    msginput.value = "";
                    var autoScroll = document.getElementById("chatBox");
                    autoScrol.scrollTop = autoScroll.scrollHeight;
                    
					var ulMe= document.getElementById("messages");
					var liMe= document.getElementById("");
					
					licount++;
					console.log(licount);

					//채팅 제거
					var ul= document.getElementById("messages");		

					var item = ul.getElementsByTagName('li');
					if(licount == 75){
						item[0].remove();
						licount = 74;
					};
            };  
            </script>